{"version":3,"sources":["CampaignData/CampaignData.module.scss","Campaigns/Campaigns.module.scss","Header/Header.module.scss","logo.svg","Header/index.js","CampaignData/CampaignItem/index.js","CampaignData/index.js","Campaigns/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","Component","CampaignItem","props","toggleModal","show","setState","showModal","getDay","date","timeDiff","Date","Math","floor","state","this","item","logo_url","name","view","country","dayStr","abs","rowItem","onClick","bind","colItem","nameItem","src","logo","alt","overlay","container","CampaignData","data","mainContainer","list","map","index","key","Campaigns","selectCampaign","selected","compaignList","id","campaignContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72254ecf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"CampaignData_mainContainer__1wUkR\",\"rowItem\":\"CampaignData_rowItem__1ZBIw\",\"colItem\":\"CampaignData_colItem__24Hpl\",\"nameItem\":\"CampaignData_nameItem__35Hmq\",\"overlay\":\"CampaignData_overlay__74_3o\",\"container\":\"CampaignData_container__12B4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"campaignContainer\":\"Campaigns_campaignContainer__2or0J\",\"selected\":\"Campaigns_selected__1Zj5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__X4Aro\"};","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","\nimport React, { Component } from \"react\";\nimport s from \"./Header.module.scss\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className={s.header}>\n        Spotlight\n      </header>\n    )\n  }\n}","\nimport React, { Component } from \"react\";\nimport s from \"./../../CampaignData/CampaignData.module.scss\";\nimport logo from '../../logo.svg';\n\nexport default class CampaignItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    }\n  }\n\n  toggleModal = (show) => {\n    this.setState({\n      showModal: show\n    })\n  }\n\n  getDay = (date) => {\n    let timeDiff = new Date() - new Date(date);\n    return Math.floor(timeDiff / 86400000)\n  }\n  render() {\n    const { showModal } = this.state;\n    const { item } = this.props;\n    const { logo_url, date, name, view, country } = item;\n    let dayStr = Math.abs(this.getDay(date)) + ' days ' + (this.getDay(date) > 0 ? 'ago' : 'ahead');\n    return (\n      <>\n        <div className={s.rowItem} onClick={this.toggleModal.bind(this, true)}>\n          <div className={s.colItem}>\n            <div>{date}</div>\n            <div>{dayStr}</div>\n          </div>\n          <div className={s.colItem + ' ' + s.nameItem}>\n            <div><img src={logo_url ? logo_url : logo} alt='logo'></img></div>\n            <div>\n              <div>{name}</div>\n              <div>{country}</div>\n            </div>\n          </div>\n          <div className={s.colItem}>\n            <div>{view}</div>\n          </div>\n          <div className={s.colItem}>\n            <div>CSV</div>\n            <div>GRAPH</div>\n            <div>SCHEDULE AGAIN</div>\n          </div>\n        </div>\n        {showModal &&\n          <div className={s.overlay}>\n            <div className={s.container}>\n              <p onClick={this.toggleModal.bind(this, false)}>Close</p>\n              <h2>Campaign Details:</h2>\n              <div>\n                <h3>{name}</h3>\n                <h4>{date}</h4>\n                <h5>{dayStr}</h5>\n              </div>\n            </div>\n          </div>\n        }\n      </>\n    )\n  }\n}","\nimport React, { Component } from \"react\";\nimport s from \"./CampaignData.module.scss\";\nimport CampaignItem from \"./CampaignItem\";\n\nexport default class CampaignData extends Component {\n  render() {\n    const { data } = this.props\n    return (\n      <div className={s.mainContainer}>\n        <div className={s.rowItem}>\n          <div className={s.colItem}>\n            DATE\n          </div>\n          <div className={s.colItem}>\n            CAMPAIGN\n          </div>\n          <div className={s.colItem}>\n            VIEW\n          </div>\n          <div className={s.colItem}>\n            ACTIONS\n          </div>\n        </div>\n        {data.list.map((item, index) => <CampaignItem key={index} item={item} />)}\n      </div>\n    )\n  }\n}","\nimport React, { Component } from \"react\";\nimport s from \"./Campaigns.module.scss\";\nimport CampaignData from \"../CampaignData\";\n\nexport default class Campaigns extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0\n    }\n    this.compaignList = ['UPCOMING CAMPAIGNS', 'LIVE CAMPAIGNS', 'PAST CAMPAIGNS']\n    this.data = [{\n      name: 'UPCOMING CAMPAIGNS',\n      id: 0,\n      list: [{\n        date: '2020-05-01',\n        name: 'Test Whatsapp',\n        country: 'US',\n        logo_url: '',\n        view: '',\n      }, {\n        date: '2019-12-17',\n        name: 'dsfcvdsfmsf',\n        country: 'JP',\n        logo_url: '',\n        view: '',\n      }, {\n        date: '2021-04-17',\n        name: 'Super Jewels Quest',\n        country: 'CA, FR',\n        logo_url: '',\n        view: '',\n      }, {\n        date: '2020-04-14',\n        name: 'Mole Slayer',\n        country: 'FR',\n        logo_url: '',\n        view: '',\n      }, {\n        date: '2020-04-14',\n        name: 'Mancala Mix',\n        country: 'CA, FR, JP',\n        logo_url: '',\n        view: '',\n      }]\n    }, {\n      name: 'LIVE CAMPAIGNS',\n      id: 0,\n      list: [{\n        date: '2019-08-01',\n        name: 'Running',\n        country: 'US',\n        logo_url: '',\n        view: '',\n      }, {\n        date: '2016-04-17',\n        name: 'Hello INs',\n        country: 'IND',\n        logo_url: '',\n        view: '',\n      }]\n    }, {\n      name: 'PAST CAMPAIGNS',\n      id: 0,\n      list: [{\n        date: '2017-05-01',\n        name: 'Test Whatsapp',\n        country: 'US',\n        logo_url: '',\n        view: '',\n      }, {\n        date: '2016-04-17',\n        name: 'dsfcvdsfmsf',\n        country: 'JP',\n        logo_url: '',\n        view: '',\n      }]\n    }]\n  }\n\n  selectCampaign = (index) => {\n    this.setState({\n      selected: index\n    })\n  }\n\n  render() {\n    const { selected } = this.state;\n    return (\n      <div className={s.campaignContainer}>\n        <h1>Manage Campaigns</h1>\n        <nav>\n          {this.compaignList.map((item, index) => <li key={index} className={index === selected ? s.selected : ''} onClick={this.selectCampaign.bind(this, index)}>{item}</li>)}\n        </nav>\n        <CampaignData data={this.data[selected]} />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Campaigns from './Campaigns';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Campaigns />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}